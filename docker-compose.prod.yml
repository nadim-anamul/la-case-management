services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: laravel-pdf-generator-app-prod
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - app_storage:/var/www/storage
      - app_cache:/var/www/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${APP_URL:-https://yourdomain.com}
    networks:
      - laravel-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: laravel-pdf-generator-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - app_storage:/var/www/storage
    networks:
      - laravel-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: laravel-pdf-generator-db-prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel_pdf_generator}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-user_password}
      MYSQL_USER: ${DB_USERNAME:-pdf_generator}
      SERVICE_TAGS: prod
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis Service
  redis:
    image: redis:alpine
    container_name: laravel-pdf-generator-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redisdata:/data
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

networks:
  laravel-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local
  app_storage:
    driver: local
  app_cache:
    driver: local 